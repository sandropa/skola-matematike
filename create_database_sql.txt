
CREATE TABLE problems (
    id SERIAL PRIMARY KEY,
    latex_text TEXT NOT NULL,
    comments TEXT,
    latex_versions TEXT[], -- PostgreSQL array for multiple versions
    solution TEXT,
    category VARCHAR(1) NOT NULL CHECK (category IN ('A', 'N', 'G', 'C'))
);

CREATE INDEX idx_problems_id ON problems(id);

CREATE TABLE problemsets (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    type VARCHAR(100) NOT NULL,
    part_of VARCHAR(100) NOT NULL
);

CREATE INDEX idx_problemsets_id ON problemsets(id);

CREATE TABLE problemset_problems (
    id_problem INTEGER NOT NULL REFERENCES problems(id) ON DELETE CASCADE,
    id_problemset INTEGER NOT NULL REFERENCES problemsets(id) ON DELETE CASCADE,
    PRIMARY KEY (id_problem, id_problemset)
);


ALTER TABLE problemset_problems ADD COLUMN position INTEGER;
ALTER TABLE problemsets ADD COLUMN group_name VARCHAR(30);

ALTER TABLE problems
ALTER COLUMN latex_versions TYPE JSONB
USING to_jsonb(latex_versions);

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    name varchar(100),
    surname varchar(100)
);



CREATE TABLE invites (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    name VARCHAR(100),
    surname VARCHAR(100),
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE password_resets (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    token VARCHAR(255) UNIQUE NOT NULL,
    expires_at TIMESTAMPTZ NOT NULL,
    used BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);